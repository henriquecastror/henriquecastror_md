blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
library(readxl)
library(dplyr)
library(tidyverse)
library(writexl)
# Clean workspace
rm(list = ls())
# import data
data <- read_excel("FF Example.xlsx", sheet="Before")
# Create deciles by MtB
data <- data  %>%
group_by(Year) %>%
mutate(MtB_deciles = ntile(MtB, 10))
# Defining Growth, Neutral, and Value
data$MtB_class = ifelse(data$MtB_deciles<=3 ,"Growth", ifelse(data$MtB_deciles>=8 ,"Value", "Neutral" ))
# Defining Growth, Neutral and Value within Size
data$Size_class = ifelse(data$Size_deciles<=1 ,"Small","Big")
# Clean workspace
rm(list = ls())
library(readxl)
library(dplyr)
library(tidyverse)
library(writexl)
# import data
data <- read_excel("FF Example.xlsx", sheet="Before")
# Create deciles by MtB
data <- data  %>%
group_by(Year) %>%
mutate(MtB_deciles = ntile(MtB, 10))
# Defining Growth, Neutral, and Value
data$MtB_class = ifelse(data$MtB_deciles<=3 ,"Growth", ifelse(data$MtB_deciles>=8 ,"Value", "Neutral" ))
# Create deciles by Size within MtB
data <- data  %>%
group_by(Year, MtB_class) %>%
mutate(Size_deciles = ntile(Size, 2))
# Defining Growth, Neutral and Value within Size
data$Size_class = ifelse(data$Size_deciles<=1 ,"Small","Big")
# Defining Growth, Neutral and Value within Size
data$Size_class = ifelse(data$Size_deciles <= median(data$Size_deciles) ,"Small", "Big")
# Finding portfolios
data$port <- paste0(data$MtB_class,data$Size_class)
# generate firm-level time- and portfolio-specific weights
data <- data  %>% group_by(Year, port) %>% mutate (weight = MtB/sum(MtB))
# Six portfolios returns
data$smb_ret <-  data$weight * data$Return
ret <- as.data.frame(tapply(data$smb_ret,
list(data$Year,
data$port),
FUN = sum))
ret$smb_buy  <- as.data.frame((ret$GrowthSmall + ret$NeutralSmall + ret$ValueSmall)/1/3)
ret$smb_sell <- as.data.frame((ret$GrowthBig   + ret$NeutralBig   + ret$ValueBig  )/1/3)
ret$smb      <- ret$smb_buy - ret$smb_sell
ret$hml_buy  <- as.data.frame((ret$ValueSmall + ret$ValueBig)/1/2)
ret$hml_sell <- as.data.frame((ret$GrowthSmall+ ret$GrowthBig)/1/2)
ret$hml      <- ret$hml_buy - ret$hml_sell
paste("The returns of the Small minus Big portfolios are, respectively," ,round(ret$smb * 100 ,3),"%")
paste("The returns of the High minus Low portfolios are, respectively," , round(ret$hml * 100 ,3),"%")
library(readxl)
library(dplyr)
library(tidyverse)
library(writexl)
# Clean workspace
rm(list = ls())
# import data
data <- read_excel("FF Example.xlsx", sheet="Before")
# Create deciles by MtB
data <- data  %>%
group_by(Year) %>%
mutate(MtB_deciles = ntile(MtB, 10))
# Defining Growth, Neutral, and Value
data$MtB_class = ifelse(data$MtB_deciles<=3 ,"Growth", ifelse(data$MtB_deciles>=8 ,"Value", "Neutral" ))
# Create deciles by Size within MtB
data <- data  %>%
group_by(Year, MtB_class) %>%
mutate(Size_deciles = ntile(Size, 2))
# Defining Growth, Neutral and Value within Size
data$Size_class = ifelse(data$Size_deciles<=1 ,"Small","Big")
# Defining Growth, Neutral and Value within Size
data$Size_class = ifelse(data$Size_deciles <= median(data$Size_deciles) ,"Small", "Big")
View(data)
# Finding portfolios
data$port <- paste0(data$MtB_class,data$Size_class)
# generate firm-level time- and portfolio-specific weights
data <- data  %>% group_by(Year, port) %>% mutate (weight = MtB/sum(MtB))
# Six portfolios returns
data$smb_ret <-  data$weight * data$Return
ret <- as.data.frame(tapply(data$smb_ret,
list(data$Year,
data$port),
FUN = sum))
ret$smb_buy  <- as.data.frame((ret$GrowthSmall + ret$NeutralSmall + ret$ValueSmall)/1/3)
ret$smb_sell <- as.data.frame((ret$GrowthBig   + ret$NeutralBig   + ret$ValueBig  )/1/3)
ret$smb      <- ret$smb_buy - ret$smb_sell
ret$hml_buy  <- as.data.frame((ret$ValueSmall + ret$ValueBig)/1/2)
ret$hml_sell <- as.data.frame((ret$GrowthSmall+ ret$GrowthBig)/1/2)
ret$hml      <- ret$hml_buy - ret$hml_sell
paste("The returns of the Small minus Big portfolios are, respectively," ,round(ret$smb * 100 ,3),"%")
paste("The returns of the High minus Low portfolios are, respectively," , round(ret$hml * 100 ,3),"%")
View(ret)
source('D:/Dropbox/Site/henriquecastror/content/post/2020-10-31 Fama French Factors Part 1/all.R', echo=TRUE)
source('D:/Dropbox/Site/henriquecastror/content/post/2020-10-31 Fama French Factors Part 1/all.R', echo=TRUE)
View(ret2)
source('D:/Dropbox/Site/henriquecastror/content/post/2020-10-31 Fama French Factors Part 1/all.R', echo=TRUE)
View(ret)
View(ret)
# Clean workspace
rm(list = ls())
# import data
data <- read_excel("FF Example.xlsx", sheet="Before")
# Create deciles by MtB
data <- data  %>%
group_by(Year) %>%
mutate(MtB_deciles = ntile(MtB, 10))
# Defining Growth, Neutral, and Value
data$MtB_class = ifelse(data$MtB_deciles<=3 ,"Growth", ifelse(data$MtB_deciles>=8 ,"Value", "Neutral" ))
# Create deciles by Size within MtB
data <- data  %>%
group_by(Year, MtB_class) %>%
mutate(Size_deciles = ntile(Size, 2))
# Defining Growth, Neutral and Value within Size
data$Size_class = ifelse(data$Size_deciles<=1 ,"Small","Big")
# Defining Growth, Neutral and Value within Size
data$Size_class = ifelse(data$Size_deciles <= median(data$Size_deciles) ,"Small", "Big")
# Finding portfolios
data$port <- paste0(data$MtB_class,data$Size_class)
# generate firm-level time- and portfolio-specific weights
data <- data  %>% group_by(Year, port) %>% mutate (weight = MtB/sum(MtB))
# Six portfolios returns
data$smb_ret <-  data$weight * data$Return
ret <- as.data.frame(tapply(data$smb_ret,
list(data$Year,
data$port),
FUN = sum))
View(ret)
View(data)
# Clean workspace
rm(list = ls())
# import data
data <- read_excel("FF Example.xlsx", sheet="Before")
# Create deciles by MtB
data <- data  %>%
group_by(Year) %>%
mutate(MtB_deciles = ntile(MtB, 10))
# Defining Growth, Neutral, and Value
data$MtB_class = ifelse(data$MtB_deciles<=3 ,"Growth", ifelse(data$MtB_deciles>=8 ,"Value", "Neutral" ))
# Create deciles by Size within MtB
data <- data  %>%
group_by(Year, MtB_class) %>%
mutate(Size_deciles = ntile(Size, 2))
# Defining Growth, Neutral and Value within Size
data$Size_class = ifelse(data$Size_deciles<=1 ,"Small","Big")
# Defining Growth, Neutral and Value within Size
data$Size_class = ifelse(data$Size_deciles <= median(data$Size_deciles) ,"Small", "Big")
# Finding portfolios
data$port <- paste0(data$MtB_class,data$Size_class)
# generate firm-level time- and portfolio-specific weights
data <- data  %>% group_by(Year, port) %>% mutate (weight = Size/sum(Size))
# Six portfolios returns
data$smb_ret <-  data$weight * data$Return
ret <- as.data.frame(tapply(data$smb_ret,
list(data$Year,
data$port),
FUN = sum))
View(ret)
ret$smb_buy  <- as.data.frame((ret$GrowthSmall + ret$NeutralSmall + ret$ValueSmall)/1/3)
ret$smb_sell <- as.data.frame((ret$GrowthBig   + ret$NeutralBig   + ret$ValueBig  )/1/3)
ret$smb      <- ret$smb_buy - ret$smb_sell
ret$hml_buy  <- as.data.frame((ret$ValueSmall + ret$ValueBig)/1/2)
ret$hml_sell <- as.data.frame((ret$GrowthSmall+ ret$GrowthBig)/1/2)
ret$hml      <- ret$hml_buy - ret$hml_sell
paste("The returns of the Small minus Big portfolios are, respectively," ,round(ret$smb * 100 ,3),"%")
paste("The returns of the High minus Low portfolios are, respectively," , round(ret$hml * 100 ,3),"%")
write_xlsx(data, "FF Example After.xlsx")
View(ret)
write_xlsx(data, "FF Example After.xlsx")
